package main

import (
	"database/sql"
	"fmt"
)

func createTables(db *sql.DB) {
	query := `
CREATE TABLE IF NOT EXISTS "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "email" varchar(255) UNIQUE NOT NULL,
  "password_hash" varchar(255) NOT NULL,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE IF NOT EXISTS "travel_groups" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "description" text, -- NOVA COLUNA ADICIONADA AQUI
  "creator_id" integer NOT NULL,
  "start_date" date,
  "end_date" date,
  "created_at" timestamp
);

CREATE TABLE IF NOT EXISTS "group_members" (
  "travel_group_id" integer NOT NULL,
  "user_id" integer NOT NULL,
  "created_at" timestamp,
  PRIMARY KEY (travel_group_id, user_id)
);

CREATE TABLE IF NOT EXISTS "destinations" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "travel_group_id" integer NOT NULL,
  "name" varchar(255) NOT NULL,
  "location" varchar(255),
  "description" text,
  "created_at" timestamp
);

CREATE TABLE IF NOT EXISTS "votings" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "travel_group_id" integer NOT NULL,
  "question" text NOT NULL,
  "options" text,
  "created_at" timestamp
);

CREATE TABLE IF NOT EXISTS "votes" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "voting_id" integer NOT NULL,
  "user_id" integer NOT NULL,
  "selected_option" varchar(255) NOT NULL,
  "created_at" timestamp
);

CREATE TABLE IF NOT EXISTS "expenses" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "travel_group_id" integer NOT NULL,
  "description" text,
  "amount" decimal(10,2) NOT NULL,
  "payer_id" integer NOT NULL,
  "created_at" timestamp
);

CREATE TABLE IF NOT EXISTS "expense_participants" (
  "expense_id" integer NOT NULL,
  "user_id" integer NOT NULL,
  PRIMARY KEY (expense_id, user_id)
);

COMMENT ON COLUMN "votings"."options" IS 'JSON array of options';

ALTER TABLE "travel_groups" ADD FOREIGN KEY ("creator_id") REFERENCES "users" ("id");

ALTER TABLE "group_members" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "group_members" ADD FOREIGN KEY ("travel_group_id") REFERENCES "travel_groups" ("id");

ALTER TABLE "destinations" ADD FOREIGN KEY ("travel_group_id") REFERENCES "travel_groups" ("id");

ALTER TABLE "votings" ADD FOREIGN KEY ("travel_group_id") REFERENCES "travel_groups" ("id");

ALTER TABLE "votes" ADD FOREIGN KEY ("voting_id") REFERENCES "votings" ("id");

ALTER TABLE "votes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "expenses" ADD FOREIGN KEY ("travel_group_id") REFERENCES "travel_groups" ("id");

ALTER TABLE "expenses" ADD FOREIGN KEY ("payer_id") REFERENCES "users" ("id");

ALTER TABLE "expense_participants" ADD FOREIGN KEY ("expense_id") REFERENCES "expenses" ("id");

ALTER TABLE "expense_participants" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");
  `

	_, err := db.Exec(query)
	if err != nil {
		panic(fmt.Sprintf("Erro ao criar tabelas: %v", err))
	}

	fmt.Println("Tabelas garantidas no banco!")
}
